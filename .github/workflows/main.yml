name: deploy_spring_to_aws

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # 자바 17 버전 설정
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      # applicaion.properties 생성
      - name: Make application.properties
        run: |
          cd ./src/main/resources
          touch ./applicaion.properties
          echo "${{ secrets.APPLICATION }}" > ./application.properties
        shell: bash

      # gradle 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      # 도커 이미지 빌드, push
      - name: Build and push Docker images
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
          docker build -t ${{ secrets.DOCKER_REPO }}:spring .
          docker push ${{ secrets.DOCKER_REPO }}:spring

      # AWS 인증
      - name: AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # AWS 인증 확인
      - name: AWS check
        run: aws configure list

      # 서버에 접속, 스크립트 실행
      - name: SSH and run scripts
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_KEY }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKER_REPO }}:spring
            docker stop spring1
            docker rm spring1
            docker run -d --network="host" --name spring1 ${{ secrets.DOCKER_REPO }}:spring      
